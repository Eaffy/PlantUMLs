@startuml
class ContentView {
  processor: Processor
}
hide ContentView methods

class Processor {
  webSocketTool: WebSocketTools
  wxTools: WXTools

  +start()
  handleReceivedMessage()
  handleOtherCommand()
  openWeChat()
  doSomething()
  connectOne()
  disconnect()
}

class WebSocketTools {
  socket: WebSocket
  isConnected = false
  {field} commandProcessingCallback: (JSON) -> ()

  connet2Server()
  send(message: JSON)
  sendHeartBeat2Server()
  didReceive(event)
  handle(receivedData)
  handleError()
}

class WXTools {
  websocketTool: WebSocketTools
  
  openWechat()
  sendWechatData()
  showAlert()
  sendInitMessage2Server()
  send2ServerWith(weChatMessage)
  sendWeChatInitMessage2Server()
  sendWeChatCloseMessage2Server()
  
  onWxLoaderAccept()
  onWxLoaderRecv()
  onWxLoaderClose()
  
  -insertToJson()
}

class OSSTools {
  -client
  +sharedTool
  
  +getAliOSSUrlFromlocalPath()
}

class NetWorkTools {
  +fetchAccessToken()
  +fetchWebSocketServerList()
}

class DeviceInfo {
  +getWiFiAddress()
  +getDeviceUUID()
}

class HTTPRequestManager {
  +request()
}

enum API {
  login
  fetchWebSocketServerList
}

Interface TargetType

ContentView ..> Processor
Processor ..> WebSocketTools
Processor ..> WXTools
Processor ..> NetWorkTools

Processor --|> WXToolsDelegate
Processor --|> WebSocketToolsDelegate
NetWorkTools ..> API
NetWorkTools ..> DeviceInfo
NetWorkTools ..> HTTPRequestManager
API --|> TargetType
WXTools ..> OSSTools
@enduml